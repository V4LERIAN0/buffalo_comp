# Generated by Django 5.2.5 on 2025-08-14 04:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('body', models.TextField()),
                ('is_pinned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=80)),
                ('type', models.CharField(choices=[('time', 'Time'), ('amrap', 'AMRAP'), ('max', 'Max')], max_length=8)),
                ('cap_seconds', models.PositiveIntegerField(default=0)),
                ('tiebreak_enabled', models.BooleanField(default=False)),
                ('description_md', models.TextField(blank=True)),
                ('media_urls', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('tier', models.CharField(blank=True, max_length=20)),
                ('logo', models.ImageField(blank=True, upload_to='sponsors/')),
                ('link_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=200)),
                ('map_link', models.URLField(blank=True)),
                ('parking_notes', models.TextField(blank=True)),
                ('checkin_notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('category', models.CharField(choices=[('sx', 'Sx'), ('intermedio', 'Intermedio'), ('rx', 'Rx')], max_length=12)),
                ('display_name', models.CharField(max_length=40)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['sort_order'],
                'unique_together': {('sex', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bib', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=60)),
                ('last_name', models.CharField(max_length=60)),
                ('display_name', models.CharField(blank=True, max_length=120)),
                ('box_gym', models.CharField(blank=True, max_length=120)),
                ('photo', models.ImageField(blank=True, upload_to='athletes/')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.division')),
            ],
        ),
        migrations.CreateModel(
            name='Heat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('start_time', models.DateTimeField()),
                ('lane_count', models.PositiveSmallIntegerField(default=8)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.division')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'ordering': ['start_time'],
                'unique_together': {('event', 'division', 'number')},
            },
        ),
        migrations.CreateModel(
            name='LaneAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lane', models.PositiveSmallIntegerField()),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.athlete')),
                ('heat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lanes', to='core.heat')),
            ],
            options={
                'ordering': ['lane'],
                'unique_together': {('heat', 'lane')},
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_value', models.FloatField(default=0)),
                ('tiebreak_value', models.FloatField(blank=True, null=True)),
                ('penalty_seconds', models.FloatField(default=0)),
                ('penalty_reps', models.IntegerField(default=0)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved')], default='approved', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.athlete')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'unique_together': {('event', 'athlete')},
            },
        ),
    ]
